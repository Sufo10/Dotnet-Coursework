@using System.Text;
@using Newtonsoft.Json;
@inject ISnackbar Snackbar
@inject HttpClient _httpClient
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.CarRental" Class="mr-3 mb-n1" />
            Ready to experience a thrill of @car.Name
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6">
                <MudPaper Elevation="4" Outlined="true" Class="mud-width-full py-8">
                    <div class="container-fluid card-image mt-2  d-flex justify-content-center">
                        <img width="500" class="object-fit-contain hover-image mx-auto rounded mt-3"
                             src=@car.Image />
                    </div>
                    <div class="mx-auto d-flex justify-end mt-5 mr-5">
                        <div class="mr-5">
                            <span>Rs.</span>
                            <span class="fw-bold fs-5">2000</span>
                            <span class="fs-6 text-secondary">/ DAY</span>
                        </div>
                    </div>
                    <div class="mx-auto d-flex justify-content-center mt-5">
                        <MudText Class="mx-auto ">
                            @car.Description
                        </MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudPaper Elevation="4" Outlined="true" Class="d-flex align-center justify-center mud-width-full py-8">
                    <div>

                        <MudText Class="mb-5">Book Information</MudText>
                        <MudDateRangePicker @ref="_picker" Label="Booking Date" @bind-DateRange="_dateRange" AutoClose="@_autoClose">
                            <PickerActions>
                                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Clear</MudButton>
                                <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                            </PickerActions>
                        </MudDateRangePicker>
                    </div>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="DeleteServer">Book Now</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    private MudDateRangePicker _picker;
    private DateRange _dateRange = new DateRange(DateTime.Now.Date.AddDays(5), DateTime.Now.AddDays(8).Date);
    private bool _autoClose;
    [Parameter]
    public Cars car { get; set; } = new Cars();

    [Parameter]
    public UserInfo User { get; set; }
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    async Task DeleteServer()
    {
        DateTime startDateString = _dateRange.Start ?? DateTime.Now;
        string startDate = startDateString.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss.fff'Z'");
        DateTime endDateString = _dateRange.End ?? DateTime.Now;
        string endDate = endDateString.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss.fff'Z'");

        var data = new
        { CarId = car.Id.ToString(), RentStartDate = startDate, RentEndDate = endDate };
        var json = JsonConvert.SerializeObject(data);
        var content = new StringContent(JsonConvert.SerializeObject(data), Encoding.UTF8, "application/json");
        if (content != null)
        {
            var response = await HttpClientExtension.AuthPostAsync<ApiResponse>(_httpClient,"https://localhost:7190/api/bookcars", content, User.Token.ToString());
            // Process the response as needed
            if (response != null && response.Status == "Success")
            {
                Snackbar.Add("Car Booked Successfully", Severity.Success);
            }
            else
            {
                Snackbar.Add($"Could not Book Car!", Severity.Error);
            }
        }
        else
        {
            Snackbar.Add($"Content object is null!", Severity.Error);
        }
    }


}
