@inherits LayoutComponentBase
@using Blazored.LocalStorage;
@inject UserService UserService
@inject NavigationManager NavigationManager



<MudThemeProvider @ref="@_mudThemeProvider"  @bind-IsDarkMode="@_isDarkMode" Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<CascadingValue Value="_user" Name="UserInfo">
    <MudLayout>
            <MudAppBar Elevation="0">
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                @if (_user?.Username != null)
                {

                    <MudButton Class="mr-3" Color="Color.Inherit" Size="Size.Medium" StartIcon="@Icons.Material.Outlined.Logout" OnClick="@Logout">
                    </MudButton>
                }
                @if (_isDarkMode)
                {
                    <MudSwitch @bind-Checked="@_isDarkMode" ThumbIcon="@Icons.Material.Outlined.LightMode" ThumbIconColor="Color.Info"></MudSwitch>
                }
                else
                {
                    <MudSwitch @bind-Checked="@_isDarkMode" ThumbIcon="@Icons.Material.Outlined.DarkMode" ThumbIconColor="Color.Info"></MudSwitch>
                }
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
                <MudDrawerHeader>
                <MudImage Src="logo.png"/>
                </MudDrawerHeader>
                <NavMenu />
            </MudDrawer>
        <MudMainContent>
            <MudContainer Class="mt-5" MaxWidth="MaxWidth.ExtraExtraLarge">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>

</CascadingValue>

@code {
    bool _drawerOpen = true;
    private bool _isDarkMode;
    private UserInfo _user;
    private string currentUri { get; set; }
    protected override void OnInitialized()
    {
        _user = UserService.GetUser();
        UserService.OnUserChanged += OnUserChanged;
        currentUri = NavigationManager.Uri;
    }

    private void OnUserChanged()
    {
        _user = UserService.GetUser();
        StateHasChanged();
    }

    public void Dispose()
    {
        UserService.OnUserChanged -= OnUserChanged;
    }
    private MudThemeProvider _mudThemeProvider;
    MudTheme MyCustomTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Primary = Colors.Indigo.Darken2,
            Secondary = Colors.Amber.Default,
            AppbarBackground = Colors.Indigo.Darken2,
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Teal.Darken2,
            Secondary = Colors.Amber.Default,
            AppbarBackground = Colors.Teal.Darken2,
        },
    };


    private void Logout()
    {
        UserService.ClearUser();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    }
